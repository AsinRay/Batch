<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>cn.bittx</groupId>
    <artifactId>job</artifactId>
    <version>0.0.1</version>
    <name>job</name>
    <description>Demo project for Spring Batch</description>
    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>   <!-- 运行时未指明 profile,则使用默认的，该配置表示 dev为默认配置 -->
            </activation>
            <properties>
                <pkg.env>dev</pkg.env>
                <upload.dir>/Users/mac/upload/</upload.dir>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <pkg.env>prod</pkg.env>
                <upload.dir>/home/ubuntu/upload/</upload.dir>
            </properties>
        </profile>
    </profiles>
    <properties>
        <java.version>11</java.version>
        <skipTests>true</skipTests>
        <pkg.format>tar.gz</pkg.format>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.batch</groupId>
            <artifactId>spring-batch-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>../lib/</classpathPrefix>
                            <mainClass>cn.bittx.job.JobMain</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>. ../config/ ${upload.dir} </Class-Path>
                        </manifestEntries>
                    </archive>
                    <includes>
                        <include>git.properties</include>
                        <include>**/*.class</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <verbose>false</verbose>
                    <format>json</format>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                </configuration>
            </plugin>
            <!--assembly package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>src/assembly/assembly-without-dependency.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 不使用spring boot 默认的打包方式 -->
            <!-- <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>-->
        </plugins>


        <resources>
            <!--  *Mapper.xml不需要替换-->
            <resource>
                <directory>src/main/java</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*Mapper.xml</include>
                </includes>
            </resource>
            <!--这个会在target/classes下产生application.properties,用于在idea中启动应用.
            因为boot在启动时会去classpath或者classpath/config中找配置文件，但我们打tar包
            将配置文件写到了config目录下，它相对于classpath的位置为../config,因此在中idea
            启动应用时会因为找不到配置文件而报错.为了解决这个问题，我们使用如下的resource来生
            成classes目录下的配置文件，此配置文件不会被打入到jar包中.-->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>generator*</exclude>
                </excludes>
            </resource>

            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>init/</exclude>
                    <exclude>config/</exclude>
                    <exclude>generator*</exclude>
                </excludes>
                <targetPath>${project.build.directory}/config</targetPath>
            </resource>
            <!--提升目录到上级目录-->
            <resource>
                <directory>src/main/resources/config</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/config</targetPath>
            </resource>

            <resource>
                <directory>src/bin</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>deployRemote.sh</exclude>
                </excludes>
                <targetPath>${project.build.directory}/bin</targetPath>
            </resource>

            <!--用于直接在项目开发时上传发新版本-->
            <resource>
                <directory>src/bin</directory>
                <filtering>true</filtering>
                <includes>
                    <include>deployRemote.sh</include>
                </includes>
                <targetPath>${project.build.directory}/scripts</targetPath>
            </resource>
        </resources>
    </build>



    <!-- 由于使用github action打包，所以建议作用mirror方式来完成为个功能，提交到github时使用中央仓库
        修改.m2下面的settings.xml,增加阿里云的仓库.如果~/.m2下没有settings.xml,可以在maven_home下
        的conf目录下找到，复制到~/.m2/下，修改完成后还需要在ide是设置使用这个settings.xml文件。
        另一种方法是直接修改maven_home下conf下的settings.xml即可。
    -->

    <!-- 阿里云仓库
    <mirror>
        <id>alimaven</id>
        <mirrorOf>central</mirrorOf>
        <name>aliyun maven</name>
        <url>http://maven.aliyun.com/nexus/content/repositories/central/</url>
    </mirror>


    <mirror>
        <id>repo1</id>
        <mirrorOf>central</mirrorOf>
        <name>Human Readable Name for this Mirror.</name>
        <url>http://repo1.maven.org/maven2/</url>
    </mirror>


    <mirror>
        <id>repo2</id>
        <mirrorOf>central</mirrorOf>
        <name>Human Readable Name for this Mirror.</name>
        <url>http://repo2.maven.org/maven2/</url>
    </mirror>

    -->

    <!--
    <repositories>
        <repository>
            <id>aliyun</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    -->
</project>
